#include <iostream>
#include <algorithm>
int partition (int *a,int l,int r){
	int fence = r;
	--r;
	while (l <= r)
	{
		while (l <= r)
		{
			if (a[l] > a[fence])
			{
				std::swap(a[l], a[fence]);
				fence = l;
				l++;
				break;
			}
			l++;
		}
		while (l <= r)
		{
			if (a[r] < a[fence])
			{
				std::swap(a[r], a[fence]);
				fence = r;
				r--;
				break;
			}
			r--;
		}
		
	}
	return fence;
}

void quickSort (int *a,int l,int r ){
	if (l <= r) {
		int p = partition(a, l, r);
		quickSort(a, l, p - 1);
		quickSort(a, p + 1, r);
	}
}
int main()
{
	int a[9] = { 9,1,8,2,7,3,6,4,5 };
	quickSort(a, 0, 8);
	for (int i = 0; i<9; ++i)
		std::cout << a[i] << std::endl;
	getchar();
}
